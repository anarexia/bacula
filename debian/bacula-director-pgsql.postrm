#! /bin/sh
# postrm script for bacula
#
# see: dh_installdeb(1)

if [ -f /usr/share/debconf/confmodule ]; then
	. /usr/share/debconf/confmodule
        db_version 2.0

        dbc_first_version=1.38.9-2
        dbc_dbuser=bacula
        dbc_dbname=bacula
fi

if [ -f /usr/share/dbconfig-common/dpkg/postrm.pgsql  ]; then
	. /usr/share/dbconfig-common/dpkg/postrm.pgsql 
        dbc_go bacula-director-pgsql $@
fi

set -e

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <r>overwrit>r> <new-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


CATALOG=bacula
PGSQL=/usr/bin/psql
CONFFILE=/etc/bacula/bacula-dir.conf
AUTHFILE=`getent passwd bacula | cut -d ':' -f 6`/.pgpass


case "$1" in
	purge)
		rm -f $CONFFILE $CONFFILE.dist $AUTHFILE

		db_purge
	;;

	remove)
	;;
	upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)

        ;;

    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 1

esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
