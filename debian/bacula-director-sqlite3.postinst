#! /bin/bash
# postinst script for bacula-director-sqlite3
#

. /usr/share/debconf/confmodule
db_version 2.0

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#
# quoting from the policy:
#     Any necessary prompting should almost always be confined to the
#     post-installation script, and should be protected with a conditional
#     so that unnecessary prompting doesn't happen if a package's
#     installation fails and the `postinst' is called with `abort-upgrade',
#     `abort-remove' or `abort-deconfigure'.

dbc_first_version=3.0.3-3
dbc_dbuser=bacula
dbc_dbname=bacula.db
dbc_basepath=/var/lib/bacula

if [ "$1" = "configure" ]; then
    . /etc/dbconfig-common/bacula-director-sqlite3.conf
    DB="$dbc_basepath/$dbc_dbname"
    echo -n " *** Checking type of existing DB at $DB: "
    if [ -f "$DB" ]; then
        if file "$DB" | grep -q "SQLite 2"; then
            echo "SQLite v2"
            echo " *** Converting SQLite2 database to SQLite3 format."
            echo " *** This may take awhile.  Please be patient..."
            echo "Converting $DB to temporary location $DB.sqlite3"
            sqlite "$DB" .dump \
                | sed 's/ INTEGER UNSIGNED AUTOINCREMENT,/ INTEGER,/' \
                | sqlite3 "$DB.sqlite3"
            echo "SQLite conversion complete.  Cleaning up:"
            echo -n "Renaming: "
            mv -v "$DB" "$DB.old-sqlite2"
            echo -n "Renaming: "
            mv -v "$DB.sqlite3" "$DB"
            chown bacula:bacula "$DB"
            echo " *** Conversion complete.  Your sqlite v2 database was left in"
            echo " *** $DB.old-sqlite2.  You may delete it at your leisure."
            echo " *** Continuing with upgrade  process..."
        else
            echo "SQLite v3"
        fi
    else
        echo "None"
        echo " *** Will create new database at this location."
    fi
fi

# source dbconfig-common shell library, and call the hook function
if [ -f /usr/share/dbconfig-common/dpkg/config.sqlite3 ]; then
  . /usr/share/dbconfig-common/dpkg/postinst.sqlite3
  dbc_go bacula-director-sqlite3 $@
fi

LOGDIR="/var/log/bacula"
POSTINST_COMMON="/usr/share/bacula-director/postinst-common"
DEFCONFIG="/usr/share/bacula-common/defconfig"
CFGFILE="/etc/bacula/bacula-dir.conf"

case "$1" in
configure)

	echo -n "Processing configuration..."
        . /etc/dbconfig-common/bacula-director-sqlite3.conf
	TARGET=$CFGFILE.dpkg-tmp
        # FIXME: should this tweak make_catalog_backup like bacula-director-pgsql.postinst does?
	sed -e "s/dbname = bacula;/dbname = \"$dbc_basepath/$dbc_dbname\";" \
            -e 's/ user = @db_user@;//' -e 's/ password = "@db_pswd@";//' \
		$DEFCONFIG/bacula-dir.conf > $TARGET
        
	/bin/bash $POSTINST_COMMON

	echo "Ok."
	;;

abort-upgrade|abort-remove|abort-deconfigure)

	;;

*)
	echo "postinst called with unknown argument \`$1'" >&2
	exit 1
	;;
esac

# Do start daemon
db_stop

if [ -n "$2" ]; then
	/etc/init.d/bacula-director stop
	sleep 1
fi

invoke-rc.d --quiet bacula-director start

#DEBHELPER#

exit 0
