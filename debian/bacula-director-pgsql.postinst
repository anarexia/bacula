#! /bin/bash
# postinst script for bacula-director-pgsql
# by Jose Luis Tallon <jltallon@adv-solutions.net>
# most ideas/code contributed by:
# - Alvaro Hernandez Tortosa <aht@ahtech.net>
# - Philip Mattias Hahn <pmhahn@debian.org>
#

. /usr/share/debconf/confmodule
db_version 2.0

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#
# quoting from the policy:
#     Any necessary prompting should almost always be confined to the
#     post-installation script, and should be protected with a conditional
#     so that unnecessary prompting doesn't happen if a package's
#     installation fails and the `postinst' is called with `abort-upgrade',
#     `abort-remove' or `abort-deconfigure'.

## Globals
LOGDIR="/var/log/bacula"
GRANT_SQL_PRIVS="/usr/share/bacula-director/grant_postgresql_privileges"
POSTINST_COMMON="/usr/share/bacula-director/postinst-common"
DEFCONFIG="/usr/share/bacula-common/defconfig"
CFGFILE="/etc/bacula/bacula-dir.conf"

get_config() {
    db_get bacula/db_host
    db_host="$RET"

    db_get bacula/dbu_name
    dbu_name="$RET"

    db_get bacula/dbu_password
    dbu_password="$RET"

    db_name='bacula'
}


check_pgsafe() {
    dbname="$1"

    [ -z "`type -p pg_lsclusters`" ] && { echo 'pg_lsclusters is not in my $PATH.'; return 1; }
    o=$(pg_lsclusters -h) || { echo "pg_lsclusters failed."; return 1; }

    if [ $(echo "$o" | wc -l) != 1 ]; then
        echo "You have configured more than one PostgreSQL cluster."
        return 1
    fi

    echo "$o" | if read VERSION CLUSTER trash; then
        cf="/etc/postgresql/$VERSION/$CLUSTER/pg_hba.conf"
        grep -q '^local.*all.*all.*ident.*sameuser$' "$cf" || {
            echo "Your settings in $cf do not allow me to continue."
            return 1;
    }
    fi

    su -c 'psql -Atl' postgres | grep "^$dbname|" && {
        echo "There is already a database named $dbname."
        return 1;
    }

    return 0
}

case "$1" in
configure)
  if dpkg --compare-versions "$2" lt 2.2.8-5ubuntu1
  then
	get_config
	db_stop
	exec 0<&1	

	echo -n "Processing configuration ..."
	TARGET=$CFGFILE.dpkg-tmp

	if ! check_pgsafe "$db_name"; then
		echo "You must create your PostgreSQL database manually."
        else
		id "$dbu_name" 2> /dev/null || adduser --system --no-create-home --disabled-login "$dbu_name"
		su -c "psql --command \"CREATE ROLE $dbu_name PASSWORD '$dbu_password' NOSUPERUSER CREATEDB NOCREATEROLE INHERIT LOGIN;\"" postgres
		su -c "createdb -E SQL_ASCII -O \"$dbu_name\" \"$db_name\"" postgres
		su -c /usr/share/bacula-director/make_postgresql_tables postgres 1> /dev/null
		su -c "USER=\"$dbu_name\" db_name=\"$db_name\" $GRANT_SQL_PRIVS" postgres 1> /dev/null
	fi

	sed -e "s/dbname = bacula;/dbname = $db_name; DB Address = \"$db_host\";/" \
	-e "s/@db_user@/$dbu_name/" -e "s/@db_pswd@/$dbu_password/" \
		$DEFCONFIG/bacula-dir.conf > $TARGET


	/bin/sh $POSTINST_COMMON
	echo "Ok."
   fi
	;;

abort-upgrade|abort-remove|abort-deconfigure)

	;;

*)
	echo "postinst called with unknown argument \`$1'" >&2
	exit 1
	;;
esac



# Do start daemon
db_stop

if [ -n "$2" ]; then
	/etc/init.d/bacula-director stop
	sleep 1
fi

invoke-rc.d --quiet bacula-director start

#DEBHELPER#

exit 0
