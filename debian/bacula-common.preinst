#! /bin/bash
# preinst script for bacula
#

set -e

# summary of how this script can be called:
#        * <new-preinst> `install'
#        * <new-preinst> `install' <old-version>
#        * <new-preinst> `upgrade' <old-version>
#        * <old-preinst> `abort-upgrade' <new-version>
#
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


create_bacula_do_not_run()
{
	if [ "$1" = "install" -a "$#" -eq 1 ]; then
		test -d /etc/bacula || mkdir -p /etc/bacula

		cat > /etc/bacula/do_not_run <<EOF
If this file exists as /etc/bacula/do_not_run, none of the Bacula daemons
will start. 
This is to allow you time to configure things before Bacula tries to 
do anything.

To make Bacula start, rename or remove this file.
EOF

	fi

}


#if [ "$1" = "install" -a "$#" -eq 1 ]; then
#	create_bacula_do_not_run()
#fi


case "$1" in

	install)
		if ! getent passwd bacula >/dev/null; then
			echo -n "Adding user 'bacula'... "
			adduser --system --no-create-home --group bacula 2>&1 > /dev/null
			usermod -c "Bacula" bacula
			usermod -G tape bacula
			echo "Ok."
		fi
	;;

	upgrade)
		# All is good -- do nothing
	;;

	abort-upgrade)
	;;

	*)
		echo "preinst called with unknown argument \`$1'" >&2
		exit 1
	;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0

